// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "这里写联系人信息",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/brc20/trade/detail": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "查询brc20铭刻详情",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BRC20API"
                ],
                "summary": "查询brc20铭刻详情",
                "operationId": "GetList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "869099058070000",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "1",
                        "name": "parentID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Category"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "models.Category": {
            "type": "object",
            "properties": {
                "createdTime": {
                    "type": "string"
                },
                "deleteTime": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "description": "分类等级",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parentID": {
                    "description": "上级分类ID",
                    "type": "integer"
                },
                "path": {
                    "description": "分类路径",
                    "type": "string"
                },
                "updatedTime": {
                    "type": "string"
                },
                "userID": {
                    "description": "创建该分类的用户ID",
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "这里写接口服务的host",
	BasePath:         "这里写base path",
	Schemes:          []string{},
	Title:            "这里写标题",
	Description:      "这里写描述信息",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
